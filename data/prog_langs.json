{
  "display_name": "Programming Languages",
  "things": {
    "ABS": {
      "file_extension": ".abs",
      "language_type": "scripting",
      "website": "https://www.abs-lang.org",
      "influenced_by": [
        "Ruby",
        "Python",
        "JavaScript",
        "Bash"
      ]
    },
    "Ada": {
      "file_extension": [
        ".adb",
        ".ads"
      ],
      "origin_year": 1980,
      "website": "https://www.adaic.org",
      "type_system": [
        "static",
        "strong",
        "safe",
        "nominal"
      ],
      "paradigm": [
        "multi",
        "structured",
        "imperative",
        "object_oriented",
        "aspect-oriented",
        "concurrent",
        "array",
        "distributed",
        "generic",
        "procedural",
        "meta"
      ],
      "influenced_by": [
        "ALGOL",
        "Pascal",
        "Simula",
        "C++",
        "Smalltalk",
        "Modula-2",
        "Java",
        "Eiffel"
      ]
    },
    "Agda": {
      "file_extension": [
        ".agda",
        ".lagda",
        ".lagda.md",
        ".lagda.rst",
        ".lagda.tex"
      ],
      "origin_year": 1999,
      "website": "https://wiki.portal.chalmers.se/agda/pmwiki.php",
      "type_system": [
        "strong",
        "static",
        "dependent",
        "nominal",
        "manifest",
        "inferred"
      ],
      "paradigm": "functional",
      "influenced_by": [
        "Coq",
        "Epigram",
        "Haskell"
      ]
    },
    "ALGOL": {
      "origin_year": 1958,
      "type_system": [
        "static",
        "strong"
      ],
      "scope": "lexical",
      "paradigm": [
        "procedural",
        "imperative",
        "structured"
      ]
    },
    "APL": {
      "origin_year": 1966,
      "type_system": "dynamic",
      "paradigm": [
        "array",
        "functional",
        "structured",
        "modular"
      ]
    },
    "AssemblyScript": {
      "file_extension": ".ts",
      "website": "https://www.assemblyscript.org",
      "compiles_to": "WebAssembly"
    },
    "ATS": {
      "file_extension": [
        ".sats",
        ".dats",
        ".hats"
      ],
      "origin_year": 2020,
      "website": "https://www.cs.bu.edu/~hwxi/atslangweb/",
      "type_system": "static",
      "paradigm": [
        "multi",
        "functional",
        "imperative"
      ]
    },
    "Ballerina": {
      "file_extension": ".bal",
      "website": "https://ballerina.io"
    },
    "Beef": {
      "file_extension": ".bf",
      "language_type": "game_development",
      "website": "https://www.beeflang.org"
    },
    "Bloom": {
      "file_extension": ".rb",
      "website": "http://bloom-lang.net"
    },
    "Bolin": {
      "website": "https://bolinlang.com"
    },
    "C++": {
      "file_extension": [
        ".C",
        ".cc",
        ".cpp",
        ".cxx",
        ".c++",
        ".h",
        ".H",
        ".hh",
        ".hpp",
        ".hxx",
        ".h++"
      ],
      "origin_year": 1985,
      "website": "https://isocpp.org",
      "expression_style": "infix",
      "type_system": [
        "static",
        "strong",
        "nominative",
        "partially_inferred"
      ],
      "paradigm": [
        "multi",
        "procedural",
        "imperative",
        "functional",
        "object_oriented",
        "generic",
        "modular"
      ],
      "influenced_by": [
        "Ada",
        "ALGOL",
        "BCPL",
        "C",
        "CLU",
        "F#",
        "ML",
        "Mesa",
        "Modula-2",
        "Simula",
        "Smalltalk"
      ]
    },
    "C": {
      "file_extension": [
        ".c",
        ".h"
      ],
      "origin_year": 1972,
      "expression_style": "infix",
      "type_system": [
        "static",
        "weak",
        "manifest",
        "nominal"
      ],
      "paradigm": [
        "multi",
        "imperative",
        "procedural",
        "structured"
      ],
      "influenced_by": [
        "B",
        "ALGOL",
        "assembly",
        "PL/I",
        "FORTRAN"
      ]
    },
    "C4wa": {
      "file_extension": [
        ".c",
        ".h"
      ],
      "website": "https://github.com/kign/c4wa",
      "compiles_to": "WebAssembly"
    },
    "Carp": {
      "file_extension": ".carp",
      "website": "https://github.com/carp-lang/Carp",
      "family": "lisp",
      "expression_style": "prefix",
      "influenced_by": "Lisp"
    },
    "Clean": {
      "file_extension": [
        ".icl",
        ".dcl",
        ".abc"
      ],
      "origin_year": 1987,
      "website": "https://wiki.clean.cs.ru.nl/Clean",
      "type_system": [
        "strong",
        "static",
        "dynamic"
      ],
      "paradigm": "functional",
      "influenced_by": [
        "Lean",
        "Miranda",
        "Haskell"
      ]
    },
    "Clojure": {
      "file_extension": [
        ".clj",
        ".cljs",
        ".cljc",
        ".edn"
      ],
      "origin_year": 2007,
      "website": "https://clojure.org",
      "family": "lisp",
      "type_system": [
        "dynamic",
        "strong"
      ],
      "paradigm": [
        "multi",
        "agent_oriented",
        "concurrent",
        "functional",
        "logic",
        "macro",
        "pipeline"
      ],
      "compiles_to": "JVM"
    },
    "ClojureScript": {
      "website": "https://github.com/clojure/clojurescript",
      "family": "lisp",
      "compiles_to": "JavaScript"
    },
    "Co": {
      "website": "https://co-lang.org/",
      "compiles_to": [
        "native",
        "WebAssembly"
      ]
    },
    "COBOL": {
      "file_extension": [
        ".cbl",
        ".cob",
        ".cpy"
      ],
      "origin_year": 1959,
      "type_system": [
        "weak",
        "static"
      ],
      "paradigm": [
        "procedural",
        "imperative",
        "object_oriented",
        "generic",
        "natural_language"
      ]
    },
    "Coq": {
      "origin_year": 1989,
      "website": "https://coq.inria.fr/",
      "paradigm": "proof_assistant"
    },
    "Crystal": {
      "file_extension": ".cr",
      "origin_year": 2014,
      "website": "https://crystal-lang.org/",
      "type_system": [
        "static",
        "inferred",
        "nominal",
        "duck"
      ],
      "paradigm": [
        "multi",
        "object_oriented",
        "concurrent"
      ]
    },
    "Cyber": {
      "file_extension": ".cy",
      "website": "https://cyberscript.dev/",
      "language_type": [
        "scripting",
        "embeddable"
      ]
    },
    "D": {
      "file_extension": ".d",
      "origin_year": 2001,
      "website": "https://dlang.org/",
      "type_system": [
        "inferred",
        "static",
        "strong"
      ],
      "paradigm": [
        "multi",
        "functional",
        "imperative",
        "object_oriented"
      ]
    },
    "Dart": {},
    "Dyon": {},
    "Eclair": {},
    "Eel": {},
    "Elixir": {},
    "Elm": {},
    "Erlang": {},
    "Faust": {},
    "Fennel": {},
    "Forest": {},
    "Forth": {},
    "F Sharp": {},
    "Go": {},
    "Gosu": {},
    "Grain": {},
    "Haskell": {},
    "Haxe": {},
    "Hope": {},
    "Hy": {},
    "Idris": {},
    "Inko": {},
    "IPL": {
      "origin_year": 1956,
      "paradigm": "assembly"
    },
    "Java": {},
    "JavaScript": {},
    "Julia": {},
    "Koka": {},
    "Kotlin": {},
    "Kou": {},
    "Lisp": {
      "origin_year": 1960,
      "expression_style": "prefix",
      "type_system": [
        "dynamic",
        "strong"
      ],
      "paradigm": [
        "multi",
        "functional",
        "procedural",
        "reflective",
        "meta"
      ],
      "influenced_by": "IPL"
    },
    "Lobster": {},
    "Lua": {},
    "Lys": {},
    "Magpie": {},
    "Mint": {},
    "ML": {
      "origin_year": 1973,
      "type_system": [
        "inferred",
        "static",
        "strong"
      ],
      "paradigm": [
        "multi",
        "functional",
        "generic",
        "imperative"
      ],
      "influenced_by": "ISWIM"
    },
    "MoonScript": {},
    "Mun": {},
    "Never": {},
    "Nim": {},
    "NuShell": {},
    "Ocaml": {},
    "Opa": {},
    "Pascal": {},
    "Perl": {},
    "PHP": {},
    "Picat": {},
    "Plorth": {},
    "Poetry": {},
    "Pony": {},
    "Prolog": {
      "file_extension": [
        ".pl",
        ".pro",
        ".P"
      ],
      "origin_year": 1972,
      "type_system": "untyped",
      "paradigm": "logic",
      "influenced_by": "Planner"
    },
    "PRQL": {},
    "PureScript": {},
    "Python": {},
    "ReScript": {},
    "Roc": {},
    "Ruby": {},
    "Rust": {},
    "Scala": {},
    "ScalaJS": {},
    "Scheme": {},
    "Scopes": {},
    "Simuala": {
      "origin_year": 1962,
      "type_system": [
        "static",
        "nominative"
      ],
      "scope": "lexical",
      "paradigm": [
        "multi",
        "procedural",
        "imperative",
        "structured",
        "object_oriented"
      ],
      "influenced_by": [
        "ALGOL",
        "SIMSCRIPT"
      ]
    },
    "SIMSCRIPT": {
      "origin_year": 1962,
      "paradigm": "natural_language"
    },
    "Smalltalk": {
      "origin_year": 1972,
      "type_system": [
        "objects",
        "strong",
        "dynamic"
      ],
      "scope": "lexical",
      "paradigm": "object_oriented",
      "influenced_by": [
        "Lisp",
        "Simula",
        "Euler",
        "IMP",
        "Planner",
        "Logo",
        "Sketchpad",
        "ARPAnet",
        "Burroughs B5000"
      ]
    },
    "Squiggle": {},
    "Swift": {},
    "Telescript": {},
    "TypeScript": {},
    "Unison": {},
    "Urn": {},
    "Val": {},
    "Vale": {},
    "Verse": {},
    "Wa": {},
    "Wah": {},
    "Walt": {},
    "Wam": {},
    "Wase": {},
    "WebAssembly": {},
    "Wracket": {},
    "Wren": {},
    "Zig": {}
  }
}
